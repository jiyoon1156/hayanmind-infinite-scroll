{"version":3,"sources":["GlobalStyle.js","components/CardSkeleton.js","components/Loader.js","components/InfiniteScrollList.js","App.js","index.js"],"names":["createGlobalStyle","StyledCardSkeleton","styled","div","CardSkeleton","color","highlightColor","width","style","marginRight","rotation","keyframes","LoaderWrapper","StyledLoader","Loader","Wrapper","StyledCard","StyledEmail","InfiniteScrollList","useState","comments","setComments","page","setPage","useEffect","a","axios","get","data","Array","from","apiCall","isFetching","setIsFetching","isReachingEnd","setIsReachingEnd","waiting","setWaiting","handleScrollThrottle","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","handleScroll","setTimeout","window","addEventListener","removeEventListener","length","concat","map","comment","id","email","fill","_","i","App","GlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"uNAEeA,cAAf,qwB,uEC8BMC,EAAqBC,IAAOC,IAAV,4QAeTC,EA3CM,WACnB,OACE,cAAC,gBAAD,CAAeC,MAAM,UAAUC,eAAe,UAA9C,SACE,eAACL,EAAD,WACE,gCAEE,cAAC,IAAD,CAAUM,MAAO,IAAKC,MAAO,CAAEC,YAAa,MAF9C,IAEuD,cAAC,IAAD,CAAUF,MAAO,QAExE,gCAEE,cAAC,IAAD,CAAUA,MAAO,GAAIC,MAAO,CAAEC,YAAa,MAF7C,IAEsD,cAAC,IAAD,CAAUF,MAAO,SAEvE,gCAEE,cAAC,IAAD,CAAUA,MAAO,KACjB,uBAKA,cAAC,IAAD,IACA,cAAC,IAAD,CAAUA,MAAO,eCdrBG,EAAWC,YAAH,iGAKRC,EAAgBV,IAAOC,IAAV,wHAObU,EAAeX,IAAOC,IAAV,qMAKKO,EACRA,GAGAI,EA7BA,WACb,OACE,cAACF,EAAD,UACE,cAACC,EAAD,OCwFAE,EAAUb,IAAOC,IAAV,qHAOPa,EAAad,IAAOC,IAAV,sNAWVc,EAAcf,IAAOC,IAAV,+CAIFe,EA7GY,WAAO,IAAD,EACCC,qBADD,mBACxBC,EADwB,KACdC,EADc,OAEPF,mBAAS,GAFF,mBAExBG,EAFwB,KAElBC,EAFkB,KAI/BC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,mEADnB,gBACNC,EADM,EACNA,KACRP,EAAYQ,MAAMC,KAAKF,IAFT,2CAAH,qDAIbG,KACC,IAV4B,MAYKZ,oBAAS,GAZd,mBAYxBa,EAZwB,KAYZC,EAZY,OAaWd,oBAAS,GAbpB,mBAaxBe,EAbwB,KAaTC,EAbS,OAwBDhB,oBAAS,GAxBR,mBAwBxBiB,EAxBwB,KAwBfC,EAxBe,KAyBzBC,EAAuB,WACvBF,KAXe,WACnB,IAAMG,EAAeC,KAAKC,IAAIC,SAASC,gBAAgBJ,aAAcG,SAASE,KAAKL,cAC7EM,EAAYL,KAAKC,IAAIC,SAASC,gBAAgBE,UAAWH,SAASE,KAAKC,WACpDH,SAASC,gBAA1BG,aACWD,GAAaN,EAAe,GAC7CN,GAAc,GAOdc,GACAV,GAAW,GACXW,YAAW,WAETX,GAAW,KACV,OAGPb,qBAAU,WAGR,OAFAyB,OAAOC,iBAAiB,SAAUZ,GAE3B,kBAAMW,OAAOE,oBAAoB,SAAUb,MACjD,IAmBH,OANAd,qBAAU,WACHQ,IAAcE,IACnBX,EAAQD,EAAO,GAZf0B,WAAU,sBAAC,8BAAAvB,EAAA,sEACcC,IAAMC,IAAN,8DAAiEL,EAAjE,eADd,iBACDM,EADC,EACDA,MAECwB,OAAS,GAChB/B,EAAYD,EAASiC,OAAOzB,IAC5BK,GAAc,IACTE,GAAiB,GANf,2CAOR,QAOF,CAACH,IAECZ,EAGH,eAACL,EAAD,WACGK,EAASkC,KAAI,SAACC,GAAD,OACZ,eAACvC,EAAD,WACE,gCACE,2CADF,WACgCuC,EAAQC,MAExC,eAACvC,EAAD,WACE,sCADF,WAC2BsC,EAAQE,SAEnC,gCACE,wCACA,uBACA,4BAAIF,EAAQX,YAVCW,EAAQC,OAe1BxB,IACEE,GACDL,MAAM,GACH6B,KAAK,GACLJ,KAAI,SAACK,EAAGC,GAAJ,OAAU,cAAC,EAAD,0BAAmCA,EAAI,UAxBxC,cAAC,EAAD,KCjDTC,EATH,WACV,OACE,qCACE,cAACC,EAAD,IACA,cAAC,EAAD,QCPNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,W","file":"static/js/main.d29bbbc7.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video, button {\n    border: 0;\n    font-size: inherit;\n    vertical-align: baseline;\n    word-break: keep-all;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst CardSkeleton = () => {\n  return (\n    <SkeletonTheme color=\"#bfbfbf\" highlightColor=\"#A8A8A8\">\n      <StyledCardSkeleton>\n        <div>\n          {/* <b>Comment Id</b>1 */}\n          <Skeleton width={100} style={{ marginRight: 12 }} /> <Skeleton width={16} />\n        </div>\n        <div>\n          {/* <b>Email</b> Eliseo@gardner.biz */}\n          <Skeleton width={45} style={{ marginRight: 12 }} /> <Skeleton width={145} />\n        </div>\n        <div>\n          {/* <b>Comment</b> */}\n          <Skeleton width={81} />\n          <br />\n          {/* <p>\n            laudantium enim quasi est quidem magnam voluptate ipsam eos tempora quo necessitatibus dolor quam autem\n            quasi reiciendis et nam sapiente accusantium\n          </p> */}\n          <Skeleton />\n          <Skeleton width={200} />\n        </div>\n      </StyledCardSkeleton>\n    </SkeletonTheme>\n  );\n};\n\nconst StyledCardSkeleton = styled.div`\n  width: 500px;\n  background: #f8f9fa;\n  border: 0.5px solid #ced4da;\n  box-sizing: border-box;\n  border-radius: 20px;\n  padding: 20px;\n  font-size: 18px;\n  margin-bottom: 14px;\n\n  & > div:nth-child(2) {\n    margin: 12px 0;\n  }\n`;\n\nexport default CardSkeleton;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <StyledLoader />\n    </LoaderWrapper>\n  );\n};\n\nconst rotation = keyframes`\n from {transform: rotate(0deg);}\n  to {transform: rotate(720deg);}\n`;\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n\nconst StyledLoader = styled.div`\n  display: inline-block;\n  width: 48px;\n  height: 4px;\n  background: #be90d4;\n  -webkit-animation: ${rotation} 1.5s linear infinite;\n  animation: ${rotation} 1.5s linear infinite;\n`;\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport CardSkeleton from './CardSkeleton';\nimport Loader from './Loader';\n\nconst InfiniteScrollList = () => {\n  const [comments, setComments] = useState();\n  const [page, setPage] = useState(2);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const { data } = await axios.get('https://jsonplaceholder.typicode.com/comments?_page=1&_limit=10');\n      setComments(Array.from(data));\n    };\n    apiCall();\n  }, []);\n\n  const [isFetching, setIsFetching] = useState(false);\n  const [isReachingEnd, setIsReachingEnd] = useState(false);\n\n  const handleScroll = () => {\n    const scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    const scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    const { clientHeight } = document.documentElement;\n    if (clientHeight + scrollTop >= scrollHeight / 2) {\n      setIsFetching(true);\n    }\n  };\n\n  const [waiting, setWaiting] = useState(true);\n  const handleScrollThrottle = () => {\n    if (waiting) {\n      handleScroll(); // 처음엔 무조건 실행\n      setWaiting(false); // false로 바꿔 실행되지 않도록 한다.\n      setTimeout(() => {\n        // 2000ms 만큼 시간이 지난 후,\n        setWaiting(true); // true로 바뀌면서 다시 실행됨.\n      }, 2000);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScrollThrottle);\n\n    return () => window.removeEventListener('scroll', handleScrollThrottle);\n  }, []);\n\n  const fetchMorePages = () => {\n    setTimeout(async () => {\n      const { data } = await axios.get(`https://jsonplaceholder.typicode.com/comments?_page=${page}&_limit=10`);\n\n      if (data.length > 0) {\n        setComments(comments.concat(data));\n        setIsFetching(false);\n      } else setIsReachingEnd(true);\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (!isFetching || isReachingEnd) return;\n    setPage(page + 1);\n    fetchMorePages();\n  }, [isFetching]);\n\n  if (!comments) return <Loader />;\n\n  return (\n    <Wrapper>\n      {comments.map((comment) => (\n        <StyledCard key={comment.id}>\n          <div>\n            <b>Comment Id</b>&nbsp;&nbsp;{comment.id}\n          </div>\n          <StyledEmail>\n            <b>Email</b>&nbsp;&nbsp;{comment.email}\n          </StyledEmail>\n          <div>\n            <b>Comment</b>\n            <br />\n            <p>{comment.body}</p>\n          </div>\n        </StyledCard>\n      ))}\n\n      {isFetching &&\n        !isReachingEnd &&\n        Array(5)\n          .fill(0)\n          .map((_, i) => <CardSkeleton key={`skeleton-item${i + 1}`} />)}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 33px 0;\n`;\n\nconst StyledCard = styled.div`\n  width: 500px;\n  background: #f8f9fa;\n  border: 0.5px solid #ced4da;\n  box-sizing: border-box;\n  border-radius: 20px;\n  padding: 20px;\n  font-size: 18px;\n  margin-bottom: 14px;\n`;\n\nconst StyledEmail = styled.div`\n  margin: 12px 0;\n`;\n\nexport default InfiniteScrollList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport GlobalStyle from './GlobalStyle';\n\nimport InfiniteScrollList from './components/InfiniteScrollList';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <InfiniteScrollList />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}